#!/bin/sh
# Start/stop the runbg service.
#
### BEGIN INIT INFO
# Provides:          runbg
# Required-Start:
# Required-Stop:
# Should-Start:
# Should-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: Keeps iSH running in the background
# Description:       runbg reads the GPS and discards the output to /dev/null.
#                    So this is not tracking you in any way. The sole
#                    purpose of this is that this is the only way to
#                    ensure an iOS program continues to run in the background.
### END INIT INFO

PATH=/bin:/usr/bin:/sbin:/usr/sbin
DESC="runbg daemon"
NAME=runbg
DAEMON=/bin/cat
EXTRA_OPTS="/dev/location > /dev/null \&"
PIDFILE=/var/run/runbg.pid
SCRIPTNAME=/etc/init.d/"$NAME"

test -f $DAEMON || exit 0

. /lib/lsb/init-functions

case "$1" in
start)
    log_daemon_msg "Starting periodic command scheduler" "runbg"
    # start_daemon -p $PIDFILE $DAEMON $EXTRA_OPTS
    /sbin/start-stop-daemon --start -b --quiet --oknodo --exec "$DAEMON" --pidfile "$PIDFILE" -- "$EXTRA_OPTS"
    log_end_msg $?
    ;;
stop)
    log_daemon_msg "Stopping periodic command scheduler" "runbg"
    killproc -p $PIDFILE $DAEMON
    RETVAL=$?
    [ $RETVAL -eq 0 ] && [ -e "$PIDFILE" ] && rm -f $PIDFILE
    log_end_msg $RETVAL
    ;;
restart)
    log_daemon_msg "Restarting periodic command scheduler" "runbg"
    $0 stop
    $0 start
    ;;
# reload | force-reload)
#     log_daemon_msg "Reloading configuration files for periodic command scheduler" "runbg"
#     # crunbgron reloads automatically
#     log_end_msg 0
#     ;;
status)
    status_of_proc -p $PIDFILE $DAEMON $NAME && exit 0 || exit $?
    ;;
*)
    log_action_msg "Usage: /etc/init.d/runbg {start|stop|status|restart|reload|force-reload}"
    exit 2
    ;;
esac
exit 0

# check_for_other_polling() {
#     other_pids="$(ps ax | grep /dev/location | grep -v grep |
#         awk '{ print $1 }' | tr '\n' ' ')"
# }

# start_pre() {
#     check_for_other_polling
#     if [ "$other_pids" != "" ]; then
#         eerror "ERROR: Other processes polling GPS [ $other_pids]"
#     fi
# }

# stop_post() {
#     check_for_other_polling
#     if [ "$other_pids" != "" ]; then
#         ewarn "WARNING: Other processes polling GPS [ $other_pids]"
#     fi
# }
