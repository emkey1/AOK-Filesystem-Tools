#!/bin/sh
#
#  Part of https://github.com/emkey1/AOK-Filesystem-Tools
#
#  License: MIT
#
#
#  Compresses a FS into a tar file that can be mounted by iSH
#
version="1.3.1"

#  shellcheck disable=SC1007
fs_build_d=$(CDPATH= cd -- "$(dirname -- "$0")" && pwd)
prog_name=$(basename "$0")

#
#  Ensure this is run in the intended location in case this was launched from
#  somewhere else.
#
cd "$fs_build_d" || exit 1


# Read in vars
# shellcheck disable=SC1091
. ./BUILD_ENV


FS_compress_verbose=false

show_help() {
    cat <<EOF
$prog_name, version $version

Usage: $prog_name [-h] [-v] [-c] [-m] [-M]

This creates a compressed tar file. that iSH can mount as a file syste,

Available options:

-h  --help         Print this help and exit.
-v  --version      Show version and exit.
-z  --zip-progress Display progrss as FS is being compressed.
EOF
    exit 0
}

show_version() {
    echo "$prog_name $version"
}


while [ -n "$1" ]; do

    case "$1" in

        "-h" | "--help" ) show_help ;;

        "-v" | "-V" | "--version" ) show_version ; exit 0 ;;

        "-z" | "--zip-progress" )
            FS_compress_verbose=true
            shift
            ;;

        *)
            echo "ERROR: bad param, try -h"
            exit 1
            ;;
    esac

done



if [ "$(whoami)" != "root" ]; then
    echo "ERROR: This must be run as root or using sudo!"
    echo
    exit 1
fi

if [ ! -d "$BUILD_ROOT_D" ]; then
    echo "ERROR: No image built yet, [$BUILD_ROOT_D]!"
    exit 1
fi

if [ "$(find "$BUILD_ROOT_D"/dev | wc -l)" -gt 1 ]; then
    echo "ERROR: Active chroot session detected!"
    exit 1
fi

hint_first_boot="$BUILD_ROOT_D/$FIRST_BOOT_HINT"
if [ -d "$BUILD_ROOT_D/$AOK_CONTENT" ]; then
    #
    #  Tell iSH to run first boot tasks
    #
    touch "$hint_first_boot"
fi

# echo "removing temp /dev items"
# rm  -f "$BUILD_ROOT_D"/dev/*

echo "=====  Creating image  ====="
echo

#
# Tar up and zip the result
#
cd "$BUILD_ROOT_D" || exit 1

if $FS_compress_verbose ; then
    opts='cvf'
else
    opts='cf'

    echo "A full build on an iSH node will take around 12 minutes to complete"
    echo "The same build even on a modest Linux node will take 30 seconds"
    echo "A -m build takes around 30s to complete on an iSH node, 1.2s on Linux"
    echo
    echo "In order not to have to wait so long with not indication anything is"
    echo "happening,  you can use the option -z to build_fs or compress_image."
    echo "This will give a detailed progress report as each file is packed."
fi


tar "$opts" - . | gzip -9 > "../$AOK_FS"

#
# copy it to /iCloud if this runs on iSH
#
if [ "$build_env" -eq 1 ]; then
    echo "---  Copying image into $ICLOUD_ARCHIVE_D  ---"
    mkdir -p "$ICLOUD_ARCHIVE_D"
    cp "$BUILD_BASE_D/$AOK_FS" "$ICLOUD_ARCHIVE_D"
fi
echo


echo "=====  Image is ready: $BUILD_BASE_D/$AOK_FS  ====="
echo

#
#  Remove first boot hint, in order to make chroot bash -l possible
#
[ -e "$hint_first_boot" ] && rm "$hint_first_boot"


exit 0 #  Avoid exiting with error if above file did not exist
